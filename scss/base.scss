$color-primary: 		#FFA00A;
$color-secondary: 		#001F3F;
$color-white: 			#FFFFFF;
$color-grey: 			#F0F0F0;
$color-black: 			#1B1B1B;
$color-warning:			#F7FF17;
$color-alert: 			#FF1A1A;
$color-success: 		#11FF71;

$xHuge:		1200px;
$xLarge:	1000px;
$xMedium:	800px;
$xSmall:	600px;
$xTiny:		400px;
$xMicro:	200px;

$huge:		100px;
$large:		50px;
$medium:	25px;
$small:		10px;
$tiny:		5px;
$micro:		1px;

@mixin transition($time: 1s, $property: all, $easing: cubic-bezier(.4,0,.2,1)) {
	@if ($property != transform) {
		-webkit-transition:  $property $time $easing;
		-moz-transition: 	 $property $time $easing;
		-o-transition: 		 $property $time $easing;
		transition: 		 $property $time $easing;
	} @else {
		-webkit-transition:  -webkit-+$property $time $easing;
		-moz-transition: 	 -moz-+$property $time $easing;
		-o-transition: 		 -o-+$property $time $easing;
		transition: 		 $property $time $easing;
	}
}

@mixin transform($function, $value) {
	-webkit-transform: 	$function+"("+$value+")";
	-moz-transform: 	$function+"("+$value+")";
	-ms-transform: 		$function+"("+$value+")";
	-o-transform: 		$function+"("+$value+")";
	transform: 			$function+"("+$value+")";
}

/* Get last or first from list */
@function first($list) {
  @return nth($list, 1);
}

@function last($list) {
  @return nth($list, length($list));
}

/* String replacement */
@function str-replace($string, $search, $replace: '') {
	$index: str-index($string, $search);

	@if $index {
		@return str-slice($string, 1, $index - 1) + $replace + str-replace(str-slice($string, $index + str-length($search)), $search, $replace);
	}

	@return $string;
}